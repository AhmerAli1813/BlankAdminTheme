<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddressArRequired" xml:space="preserve">
    <value>AddressAr is Required</value>
  </data>
  <data name="AddressRequired" xml:space="preserve">
    <value>Address is Required</value>
  </data>
  <data name="CertifiacteNumberisRequired" xml:space="preserve">
    <value>Certifiacte Number is Required</value>
  </data>
  <data name="CertificateAlertPeriodisRequired" xml:space="preserve">
    <value>Certificate  Alert Period is Required</value>
  </data>
  <data name="CertificateDateisRequired" xml:space="preserve">
    <value>Certificate Date is Required</value>
  </data>
  <data name="CertificateExpiryDateisRequired" xml:space="preserve">
    <value>Certificate Expiry Date is Required</value>
  </data>
  <data name="CertificateFileisRequired" xml:space="preserve">
    <value>Certificate File is Required</value>
  </data>
  <data name="CertificateTypeisRequired" xml:space="preserve">
    <value>Certificate Type is Required</value>
  </data>
  <data name="CityName" xml:space="preserve">
    <value>City Name is Required</value>
  </data>
  <data name="CityNameAr" xml:space="preserve">
    <value>City NameAr is Required</value>
  </data>
  <data name="ClientAddressArisRequired" xml:space="preserve">
    <value>Client AddressAr is Required</value>
  </data>
  <data name="ClientAddressisRequired" xml:space="preserve">
    <value>Client Address is Required</value>
  </data>
  <data name="ClientEmailisRequired" xml:space="preserve">
    <value>Client Email is Required</value>
  </data>
  <data name="ClientNameArisRequired" xml:space="preserve">
    <value>Client NameAr is Required</value>
  </data>
  <data name="ClientNameisRequired" xml:space="preserve">
    <value>Client Name is Required</value>
  </data>
  <data name="CompanyNameArisRequired" xml:space="preserve">
    <value>Company NameAr is Required</value>
  </data>
  <data name="CompanyNameisRequired" xml:space="preserve">
    <value>Company Name is Required</value>
  </data>
  <data name="ContactPersonArisRequired" xml:space="preserve">
    <value>Contact PersonAr is Required</value>
  </data>
  <data name="ContactPersonisRequired" xml:space="preserve">
    <value>Contact Person is Required</value>
  </data>
  <data name="ContractAlertPeriodisrequired" xml:space="preserve">
    <value>Contract Alert Period is Required</value>
  </data>
  <data name="ContractDateisRequired" xml:space="preserve">
    <value>Contract Date is Required</value>
  </data>
  <data name="ContractExpiryDateisRequired" xml:space="preserve">
    <value>Expiry Date is Required</value>
  </data>
  <data name="ContractFileisRequired" xml:space="preserve">
    <value>Contract File is Required</value>
  </data>
  <data name="ContractNumberisRequired" xml:space="preserve">
    <value>Contract Number is Required</value>
  </data>
  <data name="ContractorsNameArisRequired" xml:space="preserve">
    <value>Contractors NameAr is Required</value>
  </data>
  <data name="ContractorsNameisRequired" xml:space="preserve">
    <value>Contractors Name is Required</value>
  </data>
  <data name="ContractTypeisRequired" xml:space="preserve">
    <value>Contract Type is Required</value>
  </data>
  <data name="DepartmentHead" xml:space="preserve">
    <value>Department Head is Required</value>
  </data>
  <data name="DepartmentHeadAr" xml:space="preserve">
    <value>Department HeadAr is Required</value>
  </data>
  <data name="DepartmentName" xml:space="preserve">
    <value>Department Name is Required</value>
  </data>
  <data name="DepartmentNameAr" xml:space="preserve">
    <value>Department NameAr is Required</value>
  </data>
  <data name="DescriptionArRequired" xml:space="preserve">
    <value>DescriptionAr  is Required</value>
  </data>
  <data name="DescriptionRequired" xml:space="preserve">
    <value>Description  is Required</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is Required</value>
  </data>
  <data name="FloorNumbers" xml:space="preserve">
    <value>Floor Number is Required</value>
  </data>
  <data name="HazardNameArisRequired" xml:space="preserve">
    <value>Hazard Name Ar is Required</value>
  </data>
  <data name="HazardNameisRequired" xml:space="preserve">
    <value>Hazard Name is Required</value>
  </data>
  <data name="ImageRequired" xml:space="preserve">
    <value>Image is Required</value>
  </data>
  <data name="ItemNameArRequired" xml:space="preserve">
    <value>Item NameAr  is Required</value>
  </data>
  <data name="ItemNameRequired" xml:space="preserve">
    <value>Item Name  is Required</value>
  </data>
  <data name="Latitute" xml:space="preserve">
    <value>Latitute is Required</value>
  </data>
  <data name="LocationName" xml:space="preserve">
    <value>Location Name is Required</value>
  </data>
  <data name="LocationNameAr" xml:space="preserve">
    <value>Location Name is RequiredAr</value>
  </data>
  <data name="Longtitute" xml:space="preserve">
    <value>Longtitute is Required</value>
  </data>
  <data name="OrganizationHeadNameArRequired" xml:space="preserve">
    <value>Organization Head NameAr is Required</value>
  </data>
  <data name="OrganizationHeadNameRequired" xml:space="preserve">
    <value>Organization Head Name is Required</value>
  </data>
  <data name="OrganizationNameArRequired" xml:space="preserve">
    <value>Organization NameAr is Required</value>
  </data>
  <data name="OrganizationNameRequired" xml:space="preserve">
    <value>Organization Name is Required</value>
  </data>
  <data name="PhoneRequired" xml:space="preserve">
    <value>Phone is Required</value>
  </data>
  <data name="RegionName" xml:space="preserve">
    <value>Region Name is Required</value>
  </data>
  <data name="RegionNameAr" xml:space="preserve">
    <value>Region NameAr is Required</value>
  </data>
  <data name="StatusRequired" xml:space="preserve">
    <value>Status is Required</value>
  </data>
  <data name="SupplierNameArisRequired" xml:space="preserve">
    <value>SupplierNameAr is Required</value>
  </data>
  <data name="SupplierNameisRequired" xml:space="preserve">
    <value>Supplier Name is Required</value>
  </data>
  <data name="TicketTypeisRequired" xml:space="preserve">
    <value>Ticket Type is Required</value>
  </data>
  <data name="FullNameArRequired" xml:space="preserve">
    <value>FullName Ar Required</value>
  </data>
  <data name="FullNameRequired" xml:space="preserve">
    <value>FullName is Required</value>
  </data>
  <data name="HazardSeverityNameArisRequired" xml:space="preserve">
    <value>Hazard Severity Name Ar is Required</value>
  </data>
  <data name="HazardSeverityNameisRequired" xml:space="preserve">
    <value>Hazard Severity Name is Required</value>
  </data>
  <data name="Passwordlength" xml:space="preserve">
    <value>The password must be at least 6 characters long.</value>
  </data>
  <data name="Passwordnotmatched" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is Required</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Username is Required</value>
  </data>
  <data name="UserTypeRequired" xml:space="preserve">
    <value>UserType is Required</value>
  </data>
  <data name="CommentisRequired" xml:space="preserve">
    <value>Comment is Required</value>
  </data>
  <data name="LocationFloorisRequired" xml:space="preserve">
    <value>Location Floor is Required</value>
  </data>
  <data name="LocationisRequired" xml:space="preserve">
    <value>Location is Required</value>
  </data>
  <data name="OrganizationisRequired" xml:space="preserve">
    <value>Organization is Required</value>
  </data>
  <data name="ApprovedBySiteUserIdRequired" xml:space="preserve">
    <value>Approved By Site User Id Required</value>
  </data>
  <data name="CreatedBySiteUserIdRequired" xml:space="preserve">
    <value>Created By Site User Id Required</value>
  </data>
  <data name="DateFromRequired" xml:space="preserve">
    <value>Date From is Required</value>
  </data>
  <data name="DateToRequired" xml:space="preserve">
    <value>Date To  is Required</value>
  </data>
  <data name="DurationRequired" xml:space="preserve">
    <value>Duration is Required</value>
  </data>
  <data name="ExpiryDateRequired" xml:space="preserve">
    <value>Expiry Date is Required</value>
  </data>
  <data name="LocationIdRequired" xml:space="preserve">
    <value>Location Id is Required</value>
  </data>
  <data name="NotesRequired" xml:space="preserve">
    <value>Notes is Required</value>
  </data>
  <data name="OrganizationIdRequired" xml:space="preserve">
    <value>Organization Id is Required</value>
  </data>
  <data name="KindOfWorkRequired" xml:space="preserve">
    <value>Kind Of Work is Required</value>
  </data>
  <data name="SafetyPrecautionRequired" xml:space="preserve">
    <value>Safety Precaution is Required</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>OldPassword</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="UserProfile" xml:space="preserve">
    <value>User Profile</value>
  </data>
  <data name="CustomerLogoRequired" xml:space="preserve">
    <value>Customer Logo is Required</value>
  </data>
  <data name="ContractCopyRequired" xml:space="preserve">
    <value>Contract Copy Required</value>
  </data>
  <data name="WorkNameIsRequired" xml:space="preserve">
    <value>Supervisor Name is  Required</value>
  </data>
  <data name="ReasonRequired" xml:space="preserve">
    <value>Reason Required</value>
  </data>
  <data name="UserDetais" xml:space="preserve">
    <value>User Details</value>
  </data>
  <data name="VisitorCompanyDetails" xml:space="preserve">
    <value>Visitor Company Details</value>
  </data>
  <data name="DepartmentEmail" xml:space="preserve">
    <value>Department Email is Required</value>
  </data>
  <data name="RecipientName" xml:space="preserve">
    <value>Recipient Name</value>
  </data>
  <data name="Invaliduserorpassword" xml:space="preserve">
    <value>Invalid user or password</value>
  </data>
  <data name="HazardProbabilityNameArisRequired" xml:space="preserve">
    <value>Hazard Probability NameAr is Required</value>
  </data>
  <data name="HazardProbabilityNameisRequired" xml:space="preserve">
    <value>Hazard Probability Name is Required</value>
  </data>
  <data name="FirePrecautionNameisRequired" xml:space="preserve">
    <value>Fire Precaution Name is Required</value>
  </data>
  <data name="FirePrecautionNameArisRequired" xml:space="preserve">
    <value>Fire Precaution Namei Ar is Required</value>
  </data>
  <data name="Snapshot" xml:space="preserve">
    <value>Snapshot</value>
  </data>
  <data name="JobPerformIdIsRequired" xml:space="preserve">
    <value>Job Performer Is Required</value>
  </data>
  <data name="PermitIssuedToRequired" xml:space="preserve">
    <value>Permit Issued To Is Required</value>
  </data>
  <data name="AuthorizedPersonIdIsRequired" xml:space="preserve">
    <value>Authorized Person Is Required</value>
  </data>
  <data name="ContractSupervisor" xml:space="preserve">
    <value>ContractSupervisor Is Required</value>
  </data>
  <data name="ContractSupervisorId" xml:space="preserve">
    <value>Contract Supervisor Is Required</value>
  </data>
  <data name="CreatedAtIsRequired" xml:space="preserve">
    <value>CreatedAt Is Required</value>
  </data>
  <data name="CreatedByIsRequired" xml:space="preserve">
    <value>CreatedBy Person is Required</value>
  </data>
  <data name="DescIsRequired" xml:space="preserve">
    <value>Desc Is Required</value>
  </data>
  <data name="EmergencyEquipmentIdIsRequired" xml:space="preserve">
    <value>EmergencyEquipment Is Required</value>
  </data>
  <data name="EquipmentIdIsRequired" xml:space="preserve">
    <value>Equipment is Required</value>
  </data>
  <data name="FirePrecautionIdIsRequired" xml:space="preserve">
    <value>FirePrecaution Is required</value>
  </data>
  <data name="IssuedByIsRequired" xml:space="preserve">
    <value>IssuedBy Person is Required</value>
  </data>
  <data name="LocationIdIsRequired" xml:space="preserve">
    <value>Location is Required</value>
  </data>
  <data name="PermitValidToIsRequired" xml:space="preserve">
    <value>PermitValidTo Is Required</value>
  </data>
  <data name="UpdatedByIsRequired" xml:space="preserve">
    <value>UpdatedBy Person is Required</value>
  </data>
  <data name="WorkSupervisorRequired" xml:space="preserve">
    <value>Work Supervisor Is Required</value>
  </data>
  <data name="PermitValidFromIsRequired" xml:space="preserve">
    <value>Permit Valid From Is Required</value>
  </data>
  <data name="Electricity" xml:space="preserve">
    <value>Electricity</value>
  </data>
  <data name="FireRiskManagement" xml:space="preserve">
    <value>FireRiskManagement</value>
  </data>
  <data name="Operations" xml:space="preserve">
    <value>Operations</value>
  </data>
  <data name="ToolBox" xml:space="preserve">
    <value>ToolBox</value>
  </data>
  <data name="PropertyDamage" xml:space="preserve">
    <value>PropertyDamage</value>
  </data>
</root>