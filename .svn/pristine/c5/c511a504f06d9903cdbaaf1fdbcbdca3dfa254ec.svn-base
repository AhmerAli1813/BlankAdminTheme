using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace DPWVessel.Web.Models
{
    public class ExternalLoginConfirmationViewModel
    {
        //[Required]
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [Display(Name = "Email")]
        public string Email { get; set; }
    }

    public class ExternalLoginListViewModel
    {
        public string ReturnUrl { get; set; }
    }

    public class SendCodeViewModel
    {
        public string SelectedProvider { get; set; }
        public ICollection<System.Web.Mvc.SelectListItem> Providers { get; set; }
        public string ReturnUrl { get; set; }
        public bool RememberMe { get; set; }
    }

    public class VerifyCodeViewModel
    {
        [Required]
        public string Provider { get; set; }

        [Required]
        [Display(Name = "Code")]
        public string Code { get; set; }
        public string ReturnUrl { get; set; }

        [Display(Name = "Remember this browser?")]
        public bool RememberBrowser { get; set; }

        public bool RememberMe { get; set; }
        public bool IsSSOEnabled { get; set; }
        public bool IsAccicentReportAccess { get; set; }
    }

    public class ForgotViewModel
    {
        //[Required]
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [Display(Name = "Email")]
        public string Email { get; set; }
    }
    public class MicrosoftLoginViewModel
    {
        [EmailAddress]
        public string Email { get; set; }
    }
    public class LoginViewModel
    {
        [Display(Name = "Email")]
        [EmailAddress]
        public string Email { get; set; }
        [Required(ErrorMessage = "Please Enter Username")]
        [Display(Name = "Username")]
        public string Username { get; set; }
        //[Required(ErrorMessage = "Please select a shed")]
        //[Display(Name = "Shed Name")]
        //public int ShedId { get; set; }


        //[Required]
        //[Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Password is Required")]
        [Required(ErrorMessage = "Please Enter Password")]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
        //public List<ShedListData> ShedList { get; set; }
    }

    public class SalesAgentViewModel
    {
        [Required]
        public string Id { get; set; }

        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "PasswordRequired")]
        [StringLength(100, ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordlength", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }


        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordnotmatched")]
        public string ConfirmPassword { get; set; }

    }

    public class RegisterViewModel
    {
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "UsernameRequired")]
        [Display(Name = "Username")]
        public string Username { get; set; }

        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; }

        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "PasswordRequired")]
        [StringLength(100, ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordlength", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; }

        [Required]
        public bool isAgent { get; set; }

       
    }


    public class RegisterUserViewModel
    {
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Status is Required!")]
        [Display(Name = "Status")]
        public bool Status { get; set; }
        public List<string> UsersApplication { get; set; }

        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "UsernameRequired")]
        [Display(Name = "Username")]
        public string Username { get; set; }
        
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "FullNameRequired")]
        [Display(Name = "FullName")]
        public string FullName { get; set; }
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; }

        //[Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "ImageRequired")]
        //[Display(Name = "UserImage")]
        //public string UserImage { get; set; }

        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "PasswordRequired")]
        [StringLength(100, ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordlength", MinimumLength = 6)]
        //[StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordnotmatched")]
        //[Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]
        public string ConfirmPassword { get; set; }

        //[Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "UserTypeRequired")]
        //[Display(Name = "UserType")]
        public List<int> UserType { get; set; }

        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "PhoneRequired")]
        [Display(Name = "Phone")]
        public string Phone { get; set; }
    }

    public class ResetPasswordViewModel
    {
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; }

        //[Required]
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "PasswordRequired")]
        [StringLength(100, ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordlength", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordnotmatched")]
        public string ConfirmPassword { get; set; }

        public string Code { get; set; }
    }


    public class ResetUserPasswordViewModel
    {
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; }

        
        
        [Display(Name = "Username")]
        public string Username { get; set; }

        //[Required]
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "PasswordRequired")]
        [StringLength(100, ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordlength", MinimumLength = 6)]
        [DataType(DataType.Password)]
        [Display(Name = "Password")]
        public string Password { get; set; }

        [DataType(DataType.Password)]
        [Display(Name = "Confirm password")]
        [Compare("Password", ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "Passwordnotmatched")]
        public string ConfirmPassword { get; set; }

        
    }

    public class ForgotPasswordViewModel
    {
        [Required(ErrorMessageResourceType = typeof(Model.Resources.Messages), ErrorMessageResourceName = "EmailRequired")]
        [EmailAddress]
        [Display(Name = "Email")]
        public string Email { get; set; }

        public string callbackUrl { get; set; }
    }
}
